\chapter{Graphiques}

\section{Quelques généralités sur les graphiques}

\section{Principaux types de visualisations}

\subsection{Nuages de points}

La manière la plus simple de représenter un objet dans R est d'utiliser la fonction \texttt{plot}. Par exemple,

<<firstplot,fig=TRUE>>=
dat = sort(rnorm(100))
plot(dat)
@

R va prendre en charge le calcul d'une grande partie des paramètres nécéssaires à la visualisation, comme par exemple les limites des différents axes, et l'espacement entre les valeurs sur les axes.
Il est possible de manuellement spécifier l'ensemble de ces paramètres.
Par exemple, on peut vouloir changer les étiquettes des axes x et y par quelque chose de plus explicite.

%TODO Figure

\subsection{Histogrammes}

R offre la possibilité de représenter facilement des distributions, \emph{via} des commandes particulières.
La plus simple d'utilisation est \texttt{hist}, qui permet de représenter un histograme.

<<firsthist,fig=TRUE>>=
distrib = rnorm(1000)
hist(distrib)
@

Par défaut, R attribue un titre à ces graphiques; on peut supprimer ce titre en mettant l'argument \texttt{main} à une valeur nulle.

<<histnotitle,fig=TRUE>>=
hist(distrib,main='')
@

On peut choisir la couleur des barres, \emph{via} l'argument \texttt{col}.
Comme dans un grand nombre de situations dans lesquelles on fait appel a des vecteurs, R utilise le recyclage:
si le nombre de barres de l'histogramme est plus grand que le nombre de couleurs fournies, les couleurs des barres sont alternées.

<<histcolor,fig=TRUE>>=
hist(distrib,main='',col=c(1,2,3))
@

\subsection{\emph{Boxplots}}

\section{Ajout d'éléments sur un graphique}

\subsection{Autres séries de données}

\subsection{Légendes et axes}

\subsection{Annotations}

\section{Enregistrement des figures}

\section{Mise en application}

\subsection{Diagramme en barres}

Colorer les barres au dessus et au dessous d'une certaine valeur.

\clearpage
\section{Solution des mises en application}

\subsection{Diagramme en barres}

On souhaite représenter une diagramme en barres, et colorer les barres qui sont au dessous ou au dessus de valeurs données.
On commence par choisir la série de données qui nous intéresse -- on peut la trier en ordre croissantm, pour faciliter la lecture du graphique:

<<>>=
test_data = c(1,4,3,12,-2,-6,-1,1)
test_data = sort(test_data)
@

Pour colorer chaque barre de manière indépendante, on va créer un vecteur \texttt{colors}, qui contiendra une valeur par barre:

<<>>=
colors = rep(2,length(test_data))
@

Chaque barre sera donc de la couleur \texttt{2}, qui dépend de la \texttt{palette} actuelle.
Pour changer la couleur de chaque barre, il y a deux approches.
La première consiste a écrire une boucle:

<<eval=FALSE>>=
for(co_idx in c(1:length(test_data)))
{
	if(test_data[co_idx] > 10) colors[co_idx] = 3
	if(test_data[co_idx] < -5) colors[co_idx] = 1
}
@

Une méthode plus élégante tire parti de la vectorisation:


<<>>=
colors[test_data > 10] = 3
colors[test_data < -5] = 1
colors
@

On peut ensuite afficher le graphique avec les barres de chaque couleur:

<<meaGraphbar,fig=TRUE>>=
barplot(test_data,col=colors,ylim=range(test_data)+c(-2,2), space = 0)
abline(h=0,lwd=2)
box()
@